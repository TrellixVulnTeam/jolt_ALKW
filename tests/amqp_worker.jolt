import os
import time

from jolt import *


@influence.files("../setup.py")
@influence.files("../jolt/**/*.py")
@influence.files("../**/*.conf")
@influence.files("../docker/Dockerfile.*")
@influence.files("../docker/docker-compose.yml")
class Jolt(Task):
    name = "jolt/amqp"

    def publish(self, artifact, tools):
        with tools.cwd(".."):
            artifact.collect("**/*.conf")
            artifact.collect("**/*.py")
            artifact.collect("README.rst")
            artifact.collect("docker/Dockerfile.*", flatten=True)
            artifact.collect("docker/docker-compose.yml", flatten=True)
            artifact.strings.config = """
[jolt]
upload = false

[network]
config = [volume]
  path = /tmp/jolt-cache/jolt

[artifactory]
uri = http://nginx-service.localhost/

[amqp]
host = amqp-service.localhost
"""


class AmqpWorker(Resource):
    name = "jolt/amqp/deployment"

    requires = ["jolt/amqp"]

    def acquire(self, artifact, deps, tools):
        jolt = deps["jolt/amqp"]
        with tools.cwd(jolt.path):
            try:
                tools.run("docker-compose up -d")
                output = ""
                while "Queue bound" not in output:
                    time.sleep(1)
                    output = tools.run("docker logs jolt_amqp_worker", output_on_error=True)
                artifact.active = True
            except Exception as e:
                if os.getenv("CI"):
                    artifact.active = False
                else:
                    raise e


    def release(self, artifact, deps, tools):
        jolt = deps["jolt/amqp"]
        with tools.cwd(jolt.path):
            if artifact.active:
                tools.run("docker-compose down --volumes")
