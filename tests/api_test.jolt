#!/usr/bin/python

import os
import sys
import time
sys.path.append(".")

from testsupport import JoltTest


class TestApi(JoltTest):
    name = "api/test"

    def test_name(self):
        """
        --- tasks:
        class Explicit(Test):
            name = "explicit1"
        ---
        """
        self.jolt("build explicit1")

    def test_name_inferred(self):
        """
        --- tasks:
        class Inferred(Test):
            pass
        ---
        """
        self.jolt("build inferred")

    def test_skip(self):
        """
        --- tasks:
        class Skipped(Test):
            def test_skipped(self):
                self.skip("skipping test")
        ---
        """
        r = self.build("skipped")
        self.assertIn("OK (skipped=1)", r)

    def test_parameterized(self):
        """
        --- tasks:
        class A(Test):
            @Test.parameterized([
                (0, False,),
                (1, True,),
            ])
            def test_parameterized(self, index, boolean):
                print(index, boolean)
                self.assertTrue((index == 0 and not boolean) or (index == 1 and boolean))
        ---
        """
        r = self.build("a")
        self.assertIn("Ran 2 tests", r)

    def test_parameterized_invalid_arg(self):
        """
        --- tasks:
        class A(Test):
            @Test.parameterized(True)
            def test_parameterized(self, arg):
                pass
        ---
        """
        with self.assertRaises(Exception, msg="expects a list as argument"):
            self.build("a")

    def test_parameterized_simple_list(self):
        """
        --- tasks:
        class A(Test):
            @Test.parameterized([True, False])
            def test_parameterized(self, arg):
                pass
        ---
        """
        self.build("a")
