#!/usr/bin/env python

import json
import re
import sys
import time
sys.path.append(".")

from testsupport import JoltTest

from jolt import filesystem as fs


class CMakeExtension(JoltTest):
    name = "ext/cmake"

    def test_cmake(self):
        """
        --- file: main.cpp
        #ifdef JOLTERROR
        #error "JOLTERROR is defined"
        #endif
        int main() {{return 0;}}

        --- file: CMakeLists.txt
        project(test)
        cmake_minimum_required(VERSION 2.8)
        option(ERROR "Compiler error")
        if (ERROR)
            add_definitions("-DJOLTERROR")
        endif (ERROR)
        add_executable(test main.cpp)
        install(TARGETS test)

        --- tasks:
        from jolt.plugins.cmake import CMake

        @attributes.attribute("options", "options_{{e}}")
        class A(CMake):
            e = BooleanParameter()
            options_false = []
            options_true = ["ERROR:BOOLEAN=ON"]
        ---
        """

        r = self.build("a:e=false")
        self.assertBuild(r, "a:e=false")

        with self.assertRaises(Exception, msg="JOLTERROR is defined"):
            self.build("a:e=true")

    def test_cxxlibrary(self):
        """
        --- file: main.cpp
        int main() {{return 0;}}

        --- tasks:
        from jolt.plugins.cmake import _CMakeCXXLibrary

        class A(_CMakeCXXLibrary):
            sources = ["main.cpp"]
        ---
        """
        self.build("a")
